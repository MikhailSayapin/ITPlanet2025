networks:
  nginx-network:
#    external: true
  services-network:
    internal: true

volumes:
  zabbix-postgres:
  django-postgres:
  pgadmin:
  zabbix-postgres-backup:
  zabbix-database-backups:

services:
  nginx:
    image: nginx:1.27
    ports:
      - "55536:55536"
      - "55537:55537"
      - "55538:55538"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro
    networks:
      - nginx-network
      - services-network
    healthcheck:
      test: ["CMD", "service", "nginx", "status"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    depends_on:
      - pgadmin
      - zabbix-dashboard
    restart: unless-stopped

  postgres_zabbix:
    image: postgres:17
    volumes:
      - zabbix-postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB_ZABBIX}
      POSTGRES_USER: ${POSTGRES_USER_ZABBIX}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_ZABBIX}
    networks:
      - services-network
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB_ZABBIX}", "-U", "${POSTGRES_USER_ZABBIX}" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  postgres_django:
    image: postgres:17
    volumes:
      - django-postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB_DJANGO}
      POSTGRES_USER: ${POSTGRES_USER_DJANGO}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_DJANGO}
    networks:
      - services-network
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB_DJANGO}", "-U", "${POSTGRES_USER_DJANGO}" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  pgadmin:
#    container_name: pgadmin_container
    image: dpage/pgadmin4:9.0
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_WTF_CSRF_ENABLED: 'False'
#      PGADMIN_CONFIG_SERVER_MODE: 'True'
    volumes:
      - pgadmin:/var/lib/pgadmin
    expose:
      - "80"
#    ports:
#      - "55537:80"
    networks:
      - services-network
    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:80/misc/ping"]
      test: ["CMD", "wget", "-O", "-", "http://localhost:80/misc/ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    restart: unless-stopped

  zabbix-server:
    image: zabbix/zabbix-server-pgsql:alpine-7.0-latest
    environment:
      DB_SERVER_HOST: postgres_zabbix
      DB_SERVER_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB_ZABBIX}
      POSTGRES_USER: ${POSTGRES_USER_ZABBIX}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_ZABBIX}
    networks:
      - services-network
    healthcheck:
      test: grep -qr "zabbix_server" /proc/*/status || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    restart: unless-stopped
    depends_on:
      postgres_zabbix:
        condition: service_healthy

  zabbix-dashboard:
    image: zabbix/zabbix-web-nginx-pgsql:alpine-7.0-latest
    environment:
      DB_SERVER_HOST: postgres_zabbix
      DB_SERVER_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB_ZABBIX}
      POSTGRES_USER: ${POSTGRES_USER_ZABBIX}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_ZABBIX}
      ZBX_SERVER_HOST: zabbix-server
    networks:
      - services-network
    expose:
      - "8080"
#    ports:
#      - "55536:8080"
#      - "55536:8443"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    restart: unless-stopped
    depends_on:
      postgres_zabbix:
        condition: service_healthy
      zabbix-server:
        condition: service_healthy

  zabbix-agent:
    image: zabbix/zabbix-agent:alpine-7.0-latest
    environment:
      ZBX_HOSTNAME: Zabbix server
      ZBX_SERVER_HOST: zabbix-server
    networks:
      - services-network
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 10050 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    restart: unless-stopped
    depends_on:
      postgres_zabbix:
        condition: service_healthy
      zabbix-server:
        condition: service_healthy

  django:
    build: ./django
    command: python manage.py runserver 0.0.0.0:8000
    environment:
      DB_SERVER_HOST: postgres_django
      DB_SERVER_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB_DJANGO}
      POSTGRES_USER: ${POSTGRES_USER_DJANGO}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_DJANGO}
    volumes:
      - ./django:/example
    expose:
      - "8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    networks:
      - services-network
    depends_on:
      postgres_django:
        condition: service_healthy
    restart: unless-stopped
